<ResourceDictionary x:Class="Ecierge.Uno.Controls.Styles.InlineEdit"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="using:Microsoft.Xaml.Interactivity"
                    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
                    xmlns:ct="using:CommunityToolkit.WinUI"
                    xmlns:ctb="using:CommunityToolkit.WinUI.Behaviors"
                    xmlns:ctc="using:CommunityToolkit.WinUI.Controls"

                    xmlns:local="using:Ecierge.Uno.Controls"

                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:not_win="http://uno.ui/not_win"
                    mc:Ignorable="d not_win">

  <Style TargetType="local:InlineEdit">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:InlineEdit">
          <Border x:Name="InlineEditRoot"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Margin="{TemplateBinding Margin}"
                  Padding="{TemplateBinding Padding}">
            <i:Interaction.Behaviors>
              <!--<ic:EventTriggerBehavior EventName="FocusDisengaged">
                <ic:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}" PropertyName="IsEditing" Value="False" />
                <ic:InvokeCommandAction Command="{TemplateBinding CommitCommand}" />
              </ic:EventTriggerBehavior>-->
              <!--<ic:EventTriggerBehavior EventName="LostFocus" SourceObject="{Binding ElementName=InlineEditRoot}">
                <ic:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}" PropertyName="IsEditing" Value="False" />
                <ic:InvokeCommandAction Command="{TemplateBinding CommitCommand}" />
              </ic:EventTriggerBehavior>-->
            </i:Interaction.Behaviors>

            <ctc:SwitchPresenter TargetType="x:Boolean" Value="{TemplateBinding IsEditing}">
              <ctc:Case Value="False">
                <Grid ColumnDefinitions="*,Auto" MinWidth="120">
                  <ctc:SwitchPresenter Value="{TemplateBinding SelectedItem}">
                    <ctc:Case Value="{x:Null}">
                      <HyperlinkButton Grid.Column="0"
                                       HorizontalAlignment="Stretch"
                                       Content="{TemplateBinding PlaceholderText}"
                                       Padding="0,6,12,6">
                        <i:Interaction.Behaviors>
                          <ic:EventTriggerBehavior EventName="Click">
                            <ic:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}" PropertyName="IsEditing" Value="True" />
                          </ic:EventTriggerBehavior>
                        </i:Interaction.Behaviors>
                      </HyperlinkButton>
                    </ctc:Case>
                    <ctc:Case IsDefault="True">
                      <HyperlinkButton Grid.Column="0"
                                       HorizontalAlignment="Stretch"
                                       Content="{Binding SelectedItem, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                       ContentTemplate="{TemplateBinding ItemTemplate}"
                                       Padding="0,6,12,6">
                        <i:Interaction.Behaviors>
                          <ic:EventTriggerBehavior EventName="Click">
                            <ic:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}" PropertyName="IsEditing" Value="True" />
                          </ic:EventTriggerBehavior>
                        </i:Interaction.Behaviors>
                      </HyperlinkButton>
                    </ctc:Case>
                  </ctc:SwitchPresenter>
                  <Button Padding="6" Margin="2" HorizontalAlignment="Right">
                    <FontIcon Glyph="&#xE70F;" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14"/>
                    <i:Interaction.Behaviors>
                        <ic:EventTriggerBehavior EventName="Click">
                          <ic:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}" PropertyName="IsEditing" Value="True" />
                        </ic:EventTriggerBehavior>
                      </i:Interaction.Behaviors>
                    </Button>
                </Grid>
              </ctc:Case>
              <ctc:Case Value="True">
                <Grid x:Name="EditGrid" ColumnDefinitions="*,Auto">
                  <!--<win:StackPanel HorizontalAlignment="Stretch" xmlns:sfEditors="using:Syncfusion.UI.Xaml.Editors">
                    <ItemsControl ItemsSource="{TemplateBinding ItemsSource}"
                                  ItemTemplate="{TemplateBinding ItemTemplate}"
                                  ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}" />
                    <sfEditors:SfComboBox x:Name="PART_ItemsControl"
                                          Grid.Column="0"
                                          HorizontalAlignment="Stretch"
                                          IsEditable="{TemplateBinding IsEditable}"
                                          IsTextSearchEnabled="{TemplateBinding IsTextSearchEnabled}"
                                          IsDropDownOpen="{TemplateBinding IsDropDownOpen}"
                                          ItemsSource="{TemplateBinding ItemsSource}"
                                          SelectedItem="{Binding SelectedItem, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                          ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
                                          ItemContainerStyleSelector="{TemplateBinding ItemContainerStyleSelector}"
                                          ItemTemplate="{TemplateBinding ItemTemplate}"
                                          ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          DisplayMemberPath="{TemplateBinding DisplayMemberPath}">
                      <i:Interaction.Behaviors>
                        <ic:EventTriggerBehavior EventName="FocusDisengaged">
                          <ic:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}" PropertyName="IsEditing" Value="False" />
                          <ic:InvokeCommandAction Command="{TemplateBinding CommitCommand}" />
                        </ic:EventTriggerBehavior>
                        <ic:EventTriggerBehavior EventName="LostFocus">
                          <ic:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}" PropertyName="IsEditing" Value="False" />
                          <ic:InvokeCommandAction Command="{TemplateBinding CommitCommand}" />
                        </ic:EventTriggerBehavior>
                      </i:Interaction.Behaviors>
                      <sfEditors:SfComboBox.KeyboardAccelerators>
                        <KeyboardAccelerator Key="Escape" Modifiers="None" ScopeOwner="{Binding ElementName=EditGrid}">
                          <i:Interaction.Behaviors>
                            <ic:EventTriggerBehavior EventName="Invoked">
                              <ic:InvokeCommandAction Command="{TemplateBinding CancelCommand}" />
                            </ic:EventTriggerBehavior>
                          </i:Interaction.Behaviors>
                        </KeyboardAccelerator>
                        <KeyboardAccelerator Key="Enter" Modifiers="None" ScopeOwner="{Binding ElementName=EditGrid}">
                          <i:Interaction.Behaviors>
                            <ic:EventTriggerBehavior EventName="Invoked">
                              <ic:InvokeCommandAction Command="{TemplateBinding CommitCommand}" />
                            </ic:EventTriggerBehavior>
                          </i:Interaction.Behaviors>
                        </KeyboardAccelerator>
                      </sfEditors:SfComboBox.KeyboardAccelerators>
                    </sfEditors:SfComboBox>
                  </win:StackPanel>
                  <not_win:Border HorizontalAlignment="Stretch">-->
                  <ComboBox x:Name="PART_ItemsControl"
                              Grid.Column="0"
                              AllowFocusOnInteraction="True"
                              IsEditable="{TemplateBinding IsEditable}"
                              IsTextSearchEnabled="{TemplateBinding IsTextSearchEnabled}"
                              IsDropDownOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                              ItemsSource="{TemplateBinding ItemsSource}"
                              SelectedItem="{Binding SelectedItem, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                              ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
                              ItemContainerStyleSelector="{TemplateBinding ItemContainerStyleSelector}"
                              ItemTemplate="{TemplateBinding ItemTemplate}"
                              ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                              GroupStyleSelector="{TemplateBinding GroupStyleSelector}"
                              DisplayMemberPath="{TemplateBinding DisplayMemberPath}"
                              PlaceholderText="{TemplateBinding PlaceholderText}"
                              PlaceholderForeground="{TemplateBinding PlaceholderForeground}">
                    <ComboBox.KeyboardAccelerators>
                      <KeyboardAccelerator Key="Escape" Modifiers="None" ScopeOwner="{Binding ElementName=EditGrid}">
                        <i:Interaction.Behaviors>
                          <ic:EventTriggerBehavior EventName="Invoked">
                            <ic:InvokeCommandAction Command="{TemplateBinding CancelCommand}" />
                          </ic:EventTriggerBehavior>
                        </i:Interaction.Behaviors>
                      </KeyboardAccelerator>
                      <KeyboardAccelerator Key="Enter" Modifiers="None" ScopeOwner="{Binding ElementName=EditGrid}">
                        <i:Interaction.Behaviors>
                          <ic:EventTriggerBehavior EventName="Invoked">
                            <ic:InvokeCommandAction Command="{TemplateBinding CommitCommand}" />
                          </ic:EventTriggerBehavior>
                        </i:Interaction.Behaviors>
                      </KeyboardAccelerator>
                    </ComboBox.KeyboardAccelerators>
                  </ComboBox>
                  <!--</not_win:Border>-->
                  <Button Grid.Column="1" Command="{TemplateBinding DeleteCommand}" Padding="6" Margin="2">
                    <FontIcon Glyph="&#xE711;" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14"/>
                  </Button>
                    <!--Visibility="{Binding DeleteCommand, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource NullToVisibilityConverter}}"/>-->
                </Grid>
              </ctc:Case>
            </ctc:SwitchPresenter>

            <!--<ContentPresenter Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              RecognizesAccessKey="True" />-->
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>
