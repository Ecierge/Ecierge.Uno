<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="using:Microsoft.Xaml.Interactivity"
                    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
                    xmlns:ct="using:CommunityToolkit.WinUI"

                    xmlns:local="using:Ecierge.Uno.Controls"
                    xmlns:behaviors="using:Ecierge.Uno.Behaviors"

                    xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation">

  <ResourceDictionary.MergedDictionaries>
    <XamlControlsResources xmlns="using:Microsoft.UI.Xaml.Controls" />
  </ResourceDictionary.MergedDictionaries>

  <Style TargetType="local:ValidationControl">
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="ErrorItemTemplate" Value="{StaticResource ErrorItemTemplate}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:ValidationControl">
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">

            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ErrosMarkerVisualStates">
                <VisualState x:Name="NoErrors">
                  <VisualState.Setters>
                    <Setter Target="ErrorIconArea.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="HasErrors">
                  <VisualState.StateTriggers>
                    <ct:IsNotEqualStateTrigger Value="0" To="{Binding Errors.Count, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                  </VisualState.StateTriggers>
                  <VisualState.Setters>
                    <Setter Target="ErrorIconArea.Visibility" Value="Visible" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>


            <Grid Margin="{TemplateBinding Padding}">
              <ContentPresenter x:Name="ContentPresenter"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                Grid.Column="0"/>
              <Grid x:Name="ErrorIconArea"
                    Margin="-2,0"
                    Padding="0,2"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Background="{StaticResource SolidBackgroundFillColorTransparent}"
                    Visibility="Collapsed">

                <Grid.Resources>
                  <Flyout x:Name="ErrorsFlyout" ShowMode="Auto">
                    <ItemsControl IsTabStop="False"
                                  win:IsTapEnabled="False"
                                  Grid.Row="1"
                                  ItemTemplate="{TemplateBinding ErrorItemTemplate}"
                                  ItemsSource="{TemplateBinding Errors}">
                      <win:ItemsControl.ItemContainerTransitions>
                        <TransitionCollection>
                          <AddDeleteThemeTransition />
                          <ContentThemeTransition />
                          <ReorderThemeTransition />
                          <EntranceThemeTransition IsStaggeringEnabled="False" />
                        </TransitionCollection>
                      </win:ItemsControl.ItemContainerTransitions>
                    </ItemsControl>
                  </Flyout>
                </Grid.Resources>

                <i:Interaction.Behaviors>
                  <ic:EventTriggerBehavior EventName="PointerEntered">
                    <behaviors:ShowFlyoutAction Flyout="{StaticResource ErrorsFlyout}" Target="{Binding ElementName=ContentPresenter}" />
                  </ic:EventTriggerBehavior>
                  <ic:EventTriggerBehavior EventName="Tapped">
                    <behaviors:ShowFlyoutAction Flyout="{StaticResource ErrorsFlyout}" Target="{Binding ElementName=ContentPresenter}" />
                  </ic:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <!--<TextBlock x:Name="IconBackground" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="{StaticResource InfoBarIconFontSize}" Text="{StaticResource InfoBarIconBackgroundGlyph}" Foreground="{ThemeResource InfoBarInformationalSeverityIconBackground}" FontFamily="{ThemeResource SymbolThemeFontFamily}" AutomationProperties.AccessibilityView="Raw" />
                <TextBlock x:Name="StandardIcon" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="{StaticResource InfoBarIconFontSize}" Text="{StaticResource InfoBarErrorIconGlyph}" Foreground="{ThemeResource InfoBarInformationalSeverityIconForeground}" FontFamily="{ThemeResource SymbolThemeFontFamily}"/>-->
                <FontIcon Glyph="&#xE783;" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="{StaticResource InfoBarIconFontSize}" Foreground="{ThemeResource SystemFillColorCritical}" FontFamily="{ThemeResource SymbolThemeFontFamily}"/>
              </Grid>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>

