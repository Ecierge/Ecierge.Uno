<Page x:Class="Ecierge.Uno.App.Presentation.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:i="using:Microsoft.Xaml.Interactivity"
      xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
      xmlns:local="using:Ecierge.Uno.App.Presentation"
      xmlns:ct="using:CommunityToolkit.WinUI"
      xmlns:ctrl="using:Ecierge.Uno.Controls"
      xmlns:nav="using:Ecierge.Uno.Navigation"
      xmlns:utu="using:Uno.Toolkit.UI"
      xmlns:um="using:Uno.Material"
      xmlns:developerTools="using:CommunityToolkit.WinUI.DeveloperTools"
      NavigationCacheMode="Required"
      Background="{ThemeResource BackgroundBrush}">
  <ScrollViewer>
    <VisualStateManager.VisualStateGroups>
      <VisualStateGroup x:Name="NavigationRegionStates">
        <VisualState x:Name="Tab1State">
          <VisualState.StateTriggers>
            <ct:IsEqualStateTrigger Value="{Binding Path=(nav:NavigationRegion.NestedSegmentName), ElementName=SelectorBar}"
                                    To="{x:Bind SelectorBarItem1.Text}" />
            <!--<nav:SegmentNameTrigger TargetNavigationRegion="{x:Bind SelectorBar}"
                                    SegmentName="{x:Bind SelectorBarItem1.Text}" />-->
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="Tab1Content.Visibility" Value="Visible" />
            <Setter Target="Tab2Content.Visibility" Value="Collapsed" />
          </VisualState.Setters>
        </VisualState>
        <VisualState x:Name="Tab2State">
          <VisualState.StateTriggers>
            <ct:IsEqualStateTrigger Value="{Binding Path=(nav:NavigationRegion.NestedSegmentName), ElementName=SelectorBar}"
                                    To="{x:Bind SelectorBarItem2.Text}" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="Tab1Content.Visibility"  Value="Collapsed" />
            <Setter Target="Tab2Content.Visibility" Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>

    <Grid utu:SafeArea.Insets="VisibleBounds">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition />
      </Grid.RowDefinitions>
      <utu:NavigationBar Content="{Binding Title}" />

      <StackPanel Grid.Row="1"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Spacing="16">
        <ctrl:InlineEdit x:Name="InlineEdit" Content="{Binding}">
          <ctrl:InlineEdit.ViewContentTemplate>
            <DataTemplate>
              <HyperlinkButton Content="{Binding Name}">
                <i:Interaction.Behaviors>
                  <ic:EventTriggerBehavior EventName="Click">
                    <ic:ChangePropertyAction TargetObject="{Binding ElementName=InlineEdit}" PropertyName="IsEditing" Value="True" />
                  </ic:EventTriggerBehavior>
                </i:Interaction.Behaviors>
              </HyperlinkButton>
            </DataTemplate>
          </ctrl:InlineEdit.ViewContentTemplate>
          <ctrl:InlineEdit.ViewCommand>
            <XamlUICommand IconSource="{ct:SymbolIconSource Symbol=Edit}" />
          </ctrl:InlineEdit.ViewCommand>
          <ctrl:InlineEdit.EditContentTemplate>
            <DataTemplate>
              <TextBox Text="{Binding Name, Mode=TwoWay}" />
            </DataTemplate>
          </ctrl:InlineEdit.EditContentTemplate>
          <ctrl:InlineEdit.PrimaryEditCommand>
            <XamlUICommand IconSource="{ct:SymbolIconSource Symbol=Accept}" />
          </ctrl:InlineEdit.PrimaryEditCommand>
          <ctrl:InlineEdit.SecondaryEditCommand>
            <XamlUICommand IconSource="{ct:SymbolIconSource Symbol=Cancel}" />
          </ctrl:InlineEdit.SecondaryEditCommand>
        </ctrl:InlineEdit>
        <developerTools:FocusTracker IsActive="True" />
        <TextBox Text="{Binding Name, Mode=TwoWay}"
            PlaceholderText="Enter your name:" />
        <Button Content="Go to Second Page"
            AutomationProperties.AutomationId="SecondPageButton"
            Command="{Binding GoToSecond}" />
        <Button Content="Go to Second Page with target">
          <i:Interaction.Behaviors>
            <ic:EventTriggerBehavior EventName="Click">
              <nav:NavigateLocalSegmentAction Target="{x:Bind}" SegmentName="Second" SegmentData="{Binding Name}" />
            </ic:EventTriggerBehavior>
          </i:Interaction.Behaviors>
        </Button>
        <Button Content="Go to Second Page without target">
          <i:Interaction.Behaviors>
            <ic:EventTriggerBehavior EventName="Click">
              <nav:NavigateLocalSegmentAction SegmentName="Second" SegmentData="{Binding Name}" />
            </ic:EventTriggerBehavior>
          </i:Interaction.Behaviors>
        </Button>
        <Button Content="Go to Second Page from root">
          <i:Interaction.Behaviors>
            <ic:EventTriggerBehavior EventName="Click">
              <nav:NavigateRootRouteAction Route="Second/Data" />
            </ic:EventTriggerBehavior>
          </i:Interaction.Behaviors>
        </Button>
        <Button Content="Go to Second Page from root with dialog">
          <i:Interaction.Behaviors>
            <ic:EventTriggerBehavior EventName="Click">
              <nav:NavigateRootRouteAction Route="Second/Data/!ContentDialog" />
            </ic:EventTriggerBehavior>
          </i:Interaction.Behaviors>
        </Button>
        <Button Content="Navigate nested to Tab2">
          <i:Interaction.Behaviors>
            <ic:EventTriggerBehavior EventName="Click">
              <nav:NavigateNestedRouteAction Route="Tab2" />
            </ic:EventTriggerBehavior>
          </i:Interaction.Behaviors>
        </Button>
        <Button Content="Open dialog">
          <i:Interaction.Behaviors>
            <ic:EventTriggerBehavior EventName="Click">
              <nav:NavigateDialogSegmentAction SegmentName="Dialog" />
            </ic:EventTriggerBehavior>
          </i:Interaction.Behaviors>
        </Button>
        <Button Content="Open custom dialog">
          <i:Interaction.Behaviors>
            <ic:EventTriggerBehavior EventName="Click">
              <nav:NavigateDialogSegmentAction SegmentName="ContentDialog" />
            </ic:EventTriggerBehavior>
          </i:Interaction.Behaviors>
        </Button>
        <!-- Route.NestedSegmentName -->
        <SelectorBar x:Name="SelectorBar" nav:NavigationRegion.ForSegment="Main">
          <SelectorBarItem x:Name="SelectorBarItem1" nav:Route.SegmentName="Tab1" Text="Tab1" />
          <SelectorBarItem x:Name="SelectorBarItem2" nav:Route.SegmentName="Tab2" Text="Tab2" />
        </SelectorBar>
        <Grid>
          <TextBlock x:Name="Tab1Content" Visibility="Collapsed">Tab1 Content</TextBlock>
          <TextBlock x:Name="Tab2Content" Visibility="Collapsed">Tab2 Content</TextBlock>
        </Grid>
      </StackPanel>
    </Grid>
  </ScrollViewer>
</Page>
